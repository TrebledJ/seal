package amyc.test

import amyc.parsing._
import org.junit.Test

class ParserTests extends TestSuite with amyc.MainHelpers {
  val pipeline = Lexer andThen Parser andThen treePrinterN("")

  val baseDir = "parser"

  val outputExt = "scala"

  @Test def testLL1 = {
    Parser.debug(Parser.program, true) // Report any LL(1) conflicts.
    assert(Parser.program.isLL1)
  }

  @Test def testEmpty = shouldOutput("Empty")
  @Test def testLiterals = shouldOutput("Literals")
  @Test def testChainedMatch = shouldOutput("ChainedMatch")
  @Test def testIfCondition = shouldOutput("IfCondition")
  @Test def testMatchScrutinee = shouldOutput("MatchScrutinee")
  @Test def testAOC2020D1 = shouldOutput("AOC2020D1")
  @Test def testExt = shouldOutput("Ext")
  @Test def testFactorial = shouldOutput("Factorial")
  @Test def testArithmetic = shouldOutput("Arithmetic")
  @Test def testHanoi = shouldOutput("Hanoi")
  @Test def testHello = shouldOutput("Hello")
  @Test def testHelloInt = shouldOutput("HelloInt")
  @Test def testPrinting = shouldOutput("Printing")
  @Test def testTestLists = shouldOutput("TestLists")
  @Test def testPrecedence1 = shouldOutput("Precedence1")
  @Test def testPrecedence2 = shouldOutput("Precedence2")
  @Test def testPrecedence3 = shouldOutput("Precedence3")
  @Test def testPrecedence4 = shouldOutput("Precedence4")
  @Test def testPrecedence5 = shouldOutput("Precedence5")
  @Test def testPrecedence6 = shouldOutput("Precedence6")
  @Test def testExtType0 = shouldOutput("ExtType0")
  @Test def testExtType1 = shouldOutput("ExtType1")
  @Test def testExtType2 = shouldOutput("ExtType2")
  @Test def testExtType3 = shouldOutput("ExtType3")
  @Test def testExtType4 = shouldOutput("ExtType4")
  @Test def testExtTuple0 = shouldOutput("ExtTuple0")
  @Test def testExtTuple1 = shouldOutput("ExtTuple1")
  @Test def testExtTuple2 = shouldOutput("ExtTuple2")
  @Test def testExtTuple3 = shouldOutput("ExtTuple3")
  @Test def testExtTuple20 = shouldOutput("ExtTuple20")
  @Test def testExtTuple21 = shouldOutput("ExtTuple21")
  @Test def testExtTuple22 = shouldOutput("ExtTuple22")
  @Test def testExtTuple23 = shouldOutput("ExtTuple23")
  @Test def testExtTuple24 = shouldOutput("ExtTuple24")
  @Test def testExtTuple25 = shouldOutput("ExtTuple25")
  @Test def testExtTuple26 = shouldOutput("ExtTuple26")
  @Test def testExtTuple27 = shouldOutput("ExtTuple27")
  @Test def testExtTuplePattern0 = shouldOutput("ExtTuplePattern0")
  @Test def testExtTuplePattern1 = shouldOutput("ExtTuplePattern1")
  @Test def testExtTuplePattern2 = shouldOutput("ExtTuplePattern2")
  @Test def testExtCall0 = shouldOutput("ExtCall0")
  @Test def testExtCall1 = shouldOutput("ExtCall1")
  @Test def testExtCall2 = shouldOutput("ExtCall2")
  @Test def testExtCall3 = shouldOutput("ExtCall3")
  @Test def testExtCall4 = shouldOutput("ExtCall4")
  @Test def testExtCall5 = shouldOutput("ExtCall5")
  @Test def testExtCall6 = shouldOutput("ExtCall6")
  @Test def testExtCall7 = shouldOutput("ExtCall7")
  @Test def testExtLambda0 = shouldOutput("ExtLambda0")
  @Test def testExtLambda1 = shouldOutput("ExtLambda1")
  @Test def testExtLambda2 = shouldOutput("ExtLambda2")
  @Test def testExtLambda3 = shouldOutput("ExtLambda3")
  @Test def testExtLambda4 = shouldOutput("ExtLambda4")
  @Test def testExtLambda5 = shouldOutput("ExtLambda5")
  @Test def testExtLambda6 = shouldOutput("ExtLambda6")
  @Test def testExtLambda7 = shouldOutput("ExtLambda7")
  @Test def testExtLambda8 = shouldOutput("ExtLambda8")

  @Test def testEmptyFile = shouldFail("EmptyFile")
  @Test def testCommentClosedTwice = shouldFail("CommentClosedTwice")
  @Test def testIfPrecedence = shouldFail("IfPrecedence")
  @Test def testEmptyMatchBody = shouldFail("EmptyMatchBody")
  @Test def testDoubleVal = shouldFail("DoubleVal")
  @Test def testDoubleUnary = shouldFail("DoubleUnary")
  @Test def testMatchOperand1 = shouldFail("MatchOperand1")
  @Test def testMatchOperand2 = shouldFail("MatchOperand2")
  @Test def testValOperand = shouldFail("ValOperand")
  @Test def testDoubleQualifier = shouldFail("DoubleQualifier")
  @Test def testExtTypeError0 = shouldFail("ExtTypeError0")
  @Test def testExtTypeError1 = shouldFail("ExtTypeError1")
  @Test def testExtTypeError2 = shouldFail("ExtTypeError2")
  @Test def testExtTypeError3 = shouldFail("ExtTypeError3")
  @Test def testExtTypeError4 = shouldFail("ExtTypeError4")
  @Test def testExtTypeError5 = shouldFail("ExtTypeError5")
  @Test def testExtTupleError0 = shouldFail("ExtTupleError0")
  @Test def testExtTupleError1 = shouldFail("ExtTupleError1")
  @Test def testExtTuplePatternError0 = shouldFail("ExtTuplePatternError0")
  @Test def testExtTuplePatternError1 = shouldFail("ExtTuplePatternError1")
  @Test def testExtTuplePatternError2 = shouldFail("ExtTuplePatternError2")
  @Test def testExtTuplePatternError3 = shouldFail("ExtTuplePatternError3")
  @Test def testExtCallError0 = shouldFail("ExtCallError0")
  @Test def testExtCallError1 = shouldFail("ExtCallError1")
  @Test def testExtCallError2 = shouldFail("ExtCallError2")
  @Test def testExtCallError3 = shouldFail("ExtCallError3")
  @Test def testExtCallError4 = shouldFail("ExtCallError4")
  @Test def testExtLambdaError0 = shouldFail("ExtLambdaError0")
  @Test def testExtLambdaError1 = shouldFail("ExtLambdaError1")
  @Test def testExtLambdaError2 = shouldFail("ExtLambdaError2")
}

